<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        wC5CWIwbAAAAAElFTkSuQmCC
</value>
  </data>
</root>